var searchIndex = JSON.parse('{\
"meenle_noonle":{"doc":"Meenle_Noonle is my software renderer demo, built to help …","t":"EHHRRRDDDDDGSRNNNSMMLLLLLLLLLLLLLLLLLLLLLLLAFFLLLLLLLLLLLMFFLLLLLLLMMALFMFLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLMMMMHFFFHHFF","n":["Axis","BG_BUFFER","BUFFER","DEPTH_RANGE","HEIGHT","MODEL_Z_RANGE","Mat3x3","Mesh","Pixel","Tri","Vec3","Vertex","WHITE","WIDTH","X","Y","Z","_BLACK","a","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cube","demo","draw_line","fill_buffer","fmt","fmt","fmt","from","from","from","from","from","from","from","from","g","generate_background","get_buffer","identity","into","into","into","into","into","into","loc","mat","meshes","mul","plot_pixel","r","render","render","render","rot","rot","rot","scale","to_owned","to_owned","to_owned","to_owned","to_owned","tris","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verts","x","y","z","DEMO_MESH","render_spin","scale_mesh_to_screen","set_mesh","ICOSPHERE_TRIS","MONKEY_FILE","icosphere","monkey"],"q":[[0,"meenle_noonle"],[108,"meenle_noonle::demo"],[112,"meenle_noonle::meshes"]],"d":["","Frame buffer with the pretty background pattern. Used to …","Frame buffer.","","","","Simple 3x3 Matrix for graphics maths.","Mesh of triangles.","Pixel for the frame buffer. RGBA color, to match HTML …","Triangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a cube given two opposing vertices.","Demonstration of the meenle-noonle library. To use, first …","Uses Bresenham’s algorithm to draw a line.","Fills the frame buffer with a pretty pattern.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Generates the pretty background pattern.","Gets a pointer to the frame buffer.","This poorly named function actually gives the 3x3 identity …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Some sample meshes for demonstration.","","Plots a single pixel into the frame buffer.","","Renders the demo into the frame buffer.","Draws itself into the framebuffer.","Draws the mesh into the framebuffer.","Gives a rotation matrix to rotate a vertex about the …","Rotates the mesh.","","Scales the mesh by the given scalar.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render the spinning mesh animation into the frame buffer.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,1,1,3,3,3,11,1,2,3,4,5,11,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,5,0,0,0,2,4,5,11,1,2,2,3,4,5,5,3,0,0,11,11,1,2,3,4,5,5,11,0,11,0,3,0,4,5,11,5,5,5,1,2,3,4,5,5,11,1,2,3,4,5,11,1,2,3,4,5,11,1,2,3,4,5,4,2,2,2,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[6,6],5],0,[[7,7,7,7]],[[]],[[2,8],9],[[4,8],9],[[5,8],9],[[]],[[]],[[],2],[[]],[[]],[[]],[[]],[[[10,[4]]],5],0,[[]],[[]],[7,11],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[11,2]],[[12,12,3]],0,[[7,7,7,7]],[4],[5],[[7,1],11],[[5,1,7]],0,[[5,7]],[[]],[[]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,[[7,7]],[7],[15],0,0,[[],5],[[],5]],"c":[],"p":[[4,"Axis"],[3,"Vec3"],[3,"Pixel"],[3,"Tri"],[3,"Mesh"],[6,"Vertex"],[15,"f64"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[3,"Mat3x3"],[15,"usize"],[4,"Result"],[3,"TypeId"],[15,"u32"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
